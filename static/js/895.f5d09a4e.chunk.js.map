{"version":3,"file":"static/js/895.f5d09a4e.chunk.js","mappings":"qMACA,GAAgB,QAAU,4BAA4B,UAAY,8BAA8B,WAAa,gC,uCCgI7G,EA1HmB,WACf,OAAkCA,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,KACZ,eAHKC,EAAS,KAAEC,EAAY,KAIxBC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCN,EAAAA,EAAAA,WAAS,GAAK,eAA3CO,EAAU,KAAEC,EAAa,KA8DhC,OACI,iBAAKC,UAAWC,EAAAA,QAAmB,WAC/B,0CACA,iBAAKD,UAAWC,EAAAA,UAAqB,WACjC,iBAAKD,UAAU,iCAAgC,WAC3C,kBACIE,KAAK,OACLC,KAAK,sBACLC,GAAG,sBACHJ,UAAU,+OACVK,YAAY,IACZC,MAAOZ,EAAUF,MACjBe,SAAU,SAACC,IAlE/B,SAA2BA,GACvB,IAAMF,EAAQE,EAAEC,OAAOH,MACjBI,IARa,kDACQC,KAOQL,GAE/BP,IADAW,GAKJf,GAAa,kBAAKD,GAAS,IAAEF,MAAOc,IACxC,CA0DwBM,CAAkBJ,EACtB,KAEJ,gBAAKR,UAAS,eAAUF,EAAa,SAAW,gBAAiB,UAC7D,gDAEJ,kBAAOe,QAAQ,sBAAsBb,UAAU,8UAA6U,0BAIhY,iBAAKA,UAAU,iCAAgC,WAC3C,kBACIE,KAAK,OACLC,KAAK,sBACLC,GAAG,sBACHJ,UAAU,+OACVK,YAAY,IACZC,MAAOZ,EAAUD,SACjBc,SAAU,SAACC,IA3E/B,SAA8BA,GAC1B,IAAMF,EAAQE,EAAEC,OAAOH,MACvBX,GAAa,kBAAKD,GAAS,IAAED,SAAUa,KACvCQ,QAAQC,IAAIrB,EAChB,CAwEwBsB,CAAqBR,EACzB,KAEJ,kBAAOK,QAAQ,sBAAsBb,UAAU,8UAA6U,0BAIhY,mBACIE,KAAK,SACLF,UAAS,WAAMC,EAAAA,IAAc,YAAIA,EAAAA,YACjCgB,MAAO,CACHC,YAAa,QAEjBC,QAnFhB,YACIC,EAAAA,EAAAA,IAA2BC,EAAAA,EAAM3B,EAAUF,MAAOE,EAAUD,UACvD6B,KAAI,yCAAC,WAAOC,GAAG,sEACZ3B,EAAS,mBAAmB,2CAC/B,mDAFI,IAGJ4B,OAAM,SAACC,GACJX,QAAQC,IAAI,uBAAwBU,EACxC,GAgBR,EA4DmC,wBAOvC,C","sources":["webpack://orbiz/./src/Components/AdminPanel/AdminPanel.module.css?ccc3","Components/AdminPanel/AdminPanel.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AdminPanel_wrapper__UUh61\",\"container\":\"AdminPanel_container__dhmO8\",\"submit_btn\":\"AdminPanel_submit_btn__wPDLm\"};","import { useEffect, useState } from \"react\";\nimport cssClasses from \"./AdminPanel.module.css\";\nimport { Auth } from \"../../firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setPersistence, browserSessionPersistence } from \"firebase/auth\";\n\nconst AdminPanel = () => {\n    const [loginData, setLoginData] = useState({\n        email: \"\",\n        password: \"\",\n    });\n    const navigate = useNavigate();\n    const [validEmail, setValidEmail] = useState(true);\n    const validateEmail = (email) => {\n        const regExEmail = /^([a-zA-Z0-9-]+)@([a-zA-Z0-9]+)\\.([a-z]{2,10})$/;\n        const isValid = regExEmail.test(email);\n\n        if (isValid) return true;\n        else return false;\n    };\n    function handleEmailChange(e) {\n        const value = e.target.value;\n        const isEmailValid = validateEmail(value);\n        if (isEmailValid) {\n            setValidEmail(true);\n        } else {\n            setValidEmail(false);\n        }\n        setLoginData({ ...loginData, email: value });\n    }\n    function handlePasswordChange(e) {\n        const value = e.target.value;\n        setLoginData({ ...loginData, password: value });\n        console.log(loginData);\n    }\n\n    function loginUser() {\n        signInWithEmailAndPassword(Auth, loginData.email, loginData.password)\n            .then(async (res) => {\n                navigate(\"/enquiry-report\");\n            })\n            .catch((err) => {\n                console.log(\"Something went wrong\", err);\n            });\n\n        // setPersistence(Auth, browserSessionPersistence)\n        //     .then(() => {\n        //         // Existing and future Auth states are now persisted in the current\n        //         // session only. Closing the window would clear any existing state even\n        //         // if a user forgets to sign out.\n        //         // ...\n        //         // New sign-in will be persisted with session persistence.\n        //         return signInWithEmailAndPassword(Auth, loginData.email, loginData.password);\n        //     })\n        //     .catch((error) => {\n        //         // Handle Errors here.\n        //         const errorCode = error.code;\n        //         const errorMessage = error.message;\n        //     });\n    }\n\n    // Sign In Function\n    // function createUser() {\n    //     createUserWithEmailAndPassword(Auth, loginData.email, loginData.password)\n    //         .then(async (res) => {\n    //             const user = res.user;\n    //             console.log(res);\n    //             // navigate(\"/\");\n    //         })\n    //         .catch((err) => {\n    //             // setErrorMsg(err.message);\n    //             console.log(err);\n    //         });\n    // }\n    return (\n        <div className={cssClasses.wrapper}>\n            <span>Login Here</span>\n            <div className={cssClasses.container}>\n                <div className=\"relative z-0 mb-6 w-full group\">\n                    <input\n                        type=\"text\"\n                        name=\"floating_first_name\"\n                        id=\"floating_first_name\"\n                        className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n                        placeholder=\" \"\n                        value={loginData.email}\n                        onChange={(e) => {\n                            handleEmailChange(e);\n                        }}\n                    />\n                    <div className={`flex ${validEmail ? \"hidden\" : \"text-red-600\"}`}>\n                        <p>Email is invalid.</p>\n                    </div>\n                    <label htmlFor=\"floating_first_name\" className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\">\n                        Email Id\n                    </label>\n                </div>\n                <div className=\"relative z-0 mb-6 w-full group\">\n                    <input\n                        type=\"text\"\n                        name=\"floating_first_name\"\n                        id=\"floating_first_name\"\n                        className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\n                        placeholder=\" \"\n                        value={loginData.password}\n                        onChange={(e) => {\n                            handlePasswordChange(e);\n                        }}\n                    />\n                    <label htmlFor=\"floating_first_name\" className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\">\n                        Password\n                    </label>\n                </div>\n                <button\n                    type=\"submit\"\n                    className={` ${cssClasses.btn} ${cssClasses.submit_btn}`}\n                    style={{\n                        marginRight: \"1rem\",\n                    }}\n                    onClick={loginUser}\n                >\n                    Login\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminPanel;\n"],"names":["useState","email","password","loginData","setLoginData","navigate","useNavigate","validEmail","setValidEmail","className","cssClasses","type","name","id","placeholder","value","onChange","e","target","isEmailValid","test","handleEmailChange","htmlFor","console","log","handlePasswordChange","style","marginRight","onClick","signInWithEmailAndPassword","Auth","then","res","catch","err"],"sourceRoot":""}